//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HexDance.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "17.14.0.0")]
    public sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Magenta")]
        public global::System.Drawing.Color ChromaKeyColor {
            get {
                return ((global::System.Drawing.Color)(this["ChromaKeyColor"]));
            }
            set {
                this["ChromaKeyColor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool DoubleBuffered {
            get {
                return ((bool)(this["DoubleBuffered"]));
            }
            set {
                this["DoubleBuffered"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("00:00:00.5000000")]
        public global::System.TimeSpan EffectDisplayTime {
            get {
                return ((global::System.TimeSpan)(this["EffectDisplayTime"]));
            }
            set {
                this["EffectDisplayTime"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("50")]
        public float EffectDistance {
            get {
                return ((float)(this["EffectDistance"]));
            }
            set {
                this["EffectDistance"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("133, 181, 171")]
        public global::System.Drawing.Color EffectFillColor {
            get {
                return ((global::System.Drawing.Color)(this["EffectFillColor"]));
            }
            set {
                this["EffectFillColor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("8")]
        public float EffectHexSize {
            get {
                return ((float)(this["EffectHexSize"]));
            }
            set {
                this["EffectHexSize"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("167, 226, 215")]
        public global::System.Drawing.Color EffectLineColor {
            get {
                return ((global::System.Drawing.Color)(this["EffectLineColor"]));
            }
            set {
                this["EffectLineColor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("146, 236, 210")]
        public global::System.Drawing.Color GridBrightColor {
            get {
                return ((global::System.Drawing.Color)(this["GridBrightColor"]));
            }
            set {
                this["GridBrightColor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Black")]
        public global::System.Drawing.Color GridDarkColor {
            get {
                return ((global::System.Drawing.Color)(this["GridDarkColor"]));
            }
            set {
                this["GridDarkColor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("00:00:00.7500000")]
        public global::System.TimeSpan GridDisplayTime {
            get {
                return ((global::System.TimeSpan)(this["GridDisplayTime"]));
            }
            set {
                this["GridDisplayTime"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("10")]
        public float GridHexSize {
            get {
                return ((float)(this["GridHexSize"]));
            }
            set {
                this["GridHexSize"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("15")]
        public int GridQueueLength {
            get {
                return ((int)(this["GridQueueLength"]));
            }
            set {
                this["GridQueueLength"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("10")]
        public int GridSegmentCount {
            get {
                return ((int)(this["GridSegmentCount"]));
            }
            set {
                this["GridSegmentCount"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0.5")]
        public double Opacity {
            get {
                return ((double)(this["Opacity"]));
            }
            set {
                this["Opacity"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("00:00:00.0500000")]
        public global::System.TimeSpan UpdateInterval {
            get {
                return ((global::System.TimeSpan)(this["UpdateInterval"]));
            }
            set {
                this["UpdateInterval"] = value;
            }
        }
    }
}
